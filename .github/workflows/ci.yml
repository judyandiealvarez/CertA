name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: judyandiealvarez/certa

jobs:
  build-and-push:
    runs-on: docker-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Security scan, build, test, and push
        run: |
          echo "=== SECURITY SCAN ==="
          dotnet restore CertA/CertA.csproj
          dotnet build CertA/CertA.csproj --no-restore
          dotnet test CertA/CertA.csproj --no-build --verbosity normal
          
          echo "=== BUILD DOCKER IMAGE ==="
          docker build -t ${{ env.IMAGE_NAME }}:main -f CertA/Dockerfile .
          
          echo "=== PUSH TO DOCKER HUB ==="
          docker push ${{ env.IMAGE_NAME }}:main

  deploy:
    runs-on: swarm
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Swarm
        run: |
          echo "=== PULL IMAGE ==="
          docker pull ${{ env.IMAGE_NAME }}:main
          
          echo "=== DEPLOY TO SWARM ==="
          docker stack deploy -c docker-compose.swarm.yml certa
          
          echo "=== HEALTH CHECK ==="
          sleep 30
          SERVICE_NODE=$(docker stack ps certa --format "table {{.Node}}" | grep -v "NODE" | head -1)
          curl -f http://$SERVICE_NODE:8080
          
          echo "=== DEPLOYMENT SUCCESSFUL ==="
          docker stack services certa
