version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: certa
      POSTGRES_USER: certa
      POSTGRES_PASSWORD: certa123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - certa-network
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U certa -d certa"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  certa-app:
    image: judyandiealvarez/certa:main
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=certa;Username=certa;Password=certa123;Port=5432
    networks:
      - certa-network
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 5s
        order: stop-first
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
    depends_on:
      - postgres
    volumes:
      - certa_logs:/app/logs
      - certa_keys:/app/ca-keys

networks:
  certa-network:
    driver: overlay
    attachable: true

volumes:
  postgres_data:
    driver: local
  certa_logs:
    driver: local
  certa_keys:
    driver: local
